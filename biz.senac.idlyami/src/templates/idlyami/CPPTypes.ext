import org::csu::idl::idlmm;

extension templates::common::Common;

String getStubName(InterfaceDef this) : identifier + "_c";
String getSkelName(InterfaceDef this) : identifier + "_s";

/*
 *
 * Types
 *
 */	
String getCPPType(IDLType this) : "void";
String getCPPType(PrimitiveDef this) : switch(kind) {
	case PrimitiveKind::PK_SHORT: "short"
	case PrimitiveKind::PK_USHORT: "unsigned short"
	case PrimitiveKind::PK_LONG: "int"
	case PrimitiveKind::PK_ULONG: "unsigned int"
	case PrimitiveKind::PK_FLOAT: "float"
	case PrimitiveKind::PK_DOUBLE: "double"
	case PrimitiveKind::PK_ANY: "idlyami::any"
	case PrimitiveKind::PK_STRING: "std::string"
	default: "void" // Error!
	};

String getReturnType(IDLType this) : getCPPType();
String getCPPINType(IDLType this) : "const " + getCPPType() + "&";
String getCPPINType(PrimitiveDef this) : switch(kind) {
	case PrimitiveKind::PK_ANY: "const " + getCPPType() +"&"
	case PrimitiveKind::PK_STRING: "const " + getCPPType() +"&" 
	default: getCPPType()
	};

String getCPPOUTType(IDLType this) : getCPPType() + "&";
String getCPPINOUTType(IDLType this) : getCPPType() + "&";



String getParamType(ParameterDef this) : switch(direction) {
	case ParameterMode::PARAM_IN: getType().getCPPINType()
	case ParameterMode::PARAM_OUT: getType().getCPPOUTType()
	case ParameterMode::PARAM_INOUT: getType().getCPPINOUTType()
	default: ""
	};

String getDirection(ParameterDef this): switch(direction) {
	case ParameterMode::PARAM_IN: "IN"
	case ParameterMode::PARAM_OUT: "OUT"
	case ParameterMode::PARAM_INOUT: "INOUT"
	default: ""
	};
String getArgType(ParameterDef this) : "idlyami::ARG_"+ getDirection() +"< " + getType().getCPPType() + " >";

String getTypesList(List[ParameterDef] this) :
    if size == 0 then
    	"" 
	else if size == 1 then
		first().getArgType()
	else
		first().getArgType() + ", " + withoutFirst().getTypesList();


/*
 *
 * Operation signature
 *
 */
String getSignature(OperationDef this) : getSignature("");		
String getSignature(OperationDef this, String prefix) : getType().getReturnType() + " " + prefix + identifier + "(" + parameters.getParametersSignature() + ")";
String getParameterDeclaration(ParameterDef this) : getParamType() + " " + identifier;
String getParametersSignature(List[ParameterDef] this) :
	if size == 0 then
		"" 
	else if size == 1 then
		first().getParameterDeclaration()
	else
		first().getParameterDeclaration() + ", " + withoutFirst().getParametersSignature();